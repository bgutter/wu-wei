#+TITLE: Wu-Wei

Wu-Wei is a task management system written in ClojureScript.

[[file:ww-screenshot.png]]

*Under Construction!* :)

* Launching Development Server

Build and run Docker image

#+begin_src sh
  sh build.sh
  sh run-docker.sh
#+end_src

Open browser to localhost:9500

In emacs, run =m-X cider-connect-clj&cljs=, with endpoint localhost, port 7888, and build wu-wei.

Go forth and code.

* What does Wu-Wei do differently?

** Iterative Planning

Roadmapping a project in Wu-Wei is a top-down process. You start by creating a task that summarizes your ultimate goal -- say, renovating the house. Then, you'll progressively decompose that 'big task' into increasingly specific subtasks as you work on the project. It's Agile in spirit.

The Wu-Wei user interface is designed specifically to make deeply nested subtasks just as easy to work with as top-level tasks.

** Keep It Simple

Advanced workflows are best supported by small, simple, and predictable tools. Wu-Wei hides unused functionality, and embraces simple data models.

** Make it Powerful

Wu-Wei has a built-in lisp-like DSL for querying, filtering, grouping, and highlighting tasks. But we won't make you use it. :)

List all tasks which are open but unassigned, group them by their 'root' task, sort them by their priority, then highlight the ones that are past their due-date red.

#+begin_src clojure
  {:filter [:and [:not :assigned?] :is-open?]
   :group-by :root-task
   :sort :priority
   :mark [:overdue? [:background "red"]]}
#+end_src
